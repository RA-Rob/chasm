name: Shared RPM Test

on:
  workflow_call:
    inputs:
      distro:
        description: "Distribution to test on (rhel9, rocky9)"
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.distro == 'rocky9' && 'rockylinux:9' || 'redhat/ubi9' }}
    steps:
      - name: Download RPM artifact
        uses: actions/download-artifact@v4
        with:
          name: rpm-${{ inputs.distro }}
          path: ~/rpms

      - name: Install dependencies
        run: |
          # Enable required repositories
          if [ "${{ inputs.distro }}" = "rhel9" ]; then
            # For RHEL UBI, install dnf-utils first
            dnf -y install dnf-utils
            
            # Try to enable CRB (CodeReady Builder) if available
            # UBI containers may not have these repos, so don't fail on error
            dnf config-manager --set-enabled codeready-builder-for-rhel-9-$(arch) 2>/dev/null || \
            dnf config-manager --set-enabled crb 2>/dev/null || \
            echo "CRB repository not available in UBI container, continuing without it"
            
            # Install EPEL RPM directly (this should work in UBI)
            dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm || \
            echo "EPEL installation failed, continuing without it"
            
            # Clean and update metadata
            dnf clean all
            dnf makecache
          else
            # For Rocky Linux - enable EPEL and CRB
            dnf -y install epel-release
            dnf config-manager --set-enabled crb
            dnf clean all
            dnf makecache
          fi
          
          # Install base dependencies and available RPM dependencies
          dnf -y install python3 python3-pip \
            container-selinux \
            device-mapper-persistent-data \
            lvm2 || echo "Some dependencies may not be available in UBI container"
          
          # Try to install virtualization packages (may not be available in UBI)
          dnf -y install ansible-core libvirt-client qemu-kvm virt-install 2>/dev/null || \
          echo "Virtualization packages not available in UBI container - will install RPM with --nodeps for testing"

      - name: Install and test RPM
        run: |
          # Find and install the RPM
          RPM_FILE=$(find ~/rpms -name "*.rpm" -type f | head -1)
          if [ -z "$RPM_FILE" ]; then
            echo "No RPM file found in artifacts!"
            exit 1
          fi
          
          echo "Installing RPM: $RPM_FILE"
          
          # Try normal installation first
          if rpm -ivh "$RPM_FILE"; then
            echo "RPM installed successfully with all dependencies"
          else
            echo "Normal installation failed, trying with --nodeps for testing purposes"
            rpm -ivh --nodeps "$RPM_FILE"
          fi
          
          # Test rift command
          rift version || exit 1 