name: Shared RPM Build Environment

on:
  workflow_call:
    outputs:
      python_version:
        description: "Python version used in the build"
        value: ${{ jobs.setup.outputs.python_version }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      python_version: ${{ steps.python.outputs.version }}
    
    steps:
      - name: Set up Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Set up RPM build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm rpm2cpio cpio alien python3-pip
          
          # Set up EPEL repository
          sudo rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm || true
          
          # Set up DNF and YUM repositories
          sudo mkdir -p /etc/yum.repos.d
          sudo tee /etc/yum.repos.d/epel.repo > /dev/null << 'EOF'
          [epel]
          name=Extra Packages for Enterprise Linux 9
          baseurl=https://dl.fedoraproject.org/pub/epel/9/Everything/x86_64/
          enabled=1
          gpgcheck=0
          EOF
          
          # Install Python packages from EPEL
          sudo dnf install -y --nogpgcheck python3-sphinx python3-sphinx-rtd-theme || true
          
          # Install via pip as fallback and make it available to RPM
          pip3 install sphinx sphinx-rtd-theme
          sudo mkdir -p /usr/local/lib/python3.*/site-packages/
          sudo cp -r /usr/local/lib/python3.*/site-packages/* /usr/lib/python3/dist-packages/ || true
          
          # Set up RPM macros for Python dependencies
          sudo mkdir -p /usr/lib/rpm/macros.d
          sudo tee /usr/lib/rpm/macros.d/macros.python3 > /dev/null << 'EOF'
          %__python3 /usr/bin/python3
          %python3_sitelib %(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
          %python3_sitearch %(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1))")
          %python3_version %(python3 -c "import sys; sys.stdout.write('{0}.{1}'.format(sys.version_info[0], sys.version_info[1]))")
          %python3_version_nodots %(python3 -c "import sys; sys.stdout.write('{0}{1}'.format(sys.version_info[0], sys.version_info[1]))")
          EOF
          
          # Create RPM build directories
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS} 