name: Shared RPM Build Environment

on:
  workflow_call:
    outputs:
      python_version:
        description: "Python version used in the build"
        value: ${{ jobs.setup.outputs.python_version }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      python_version: ${{ steps.python.outputs.version }}
    
    steps:
      - name: Create RPM build directories
        run: |
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          
      - name: Set up Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          
      - name: Set up RPM build environment
        run: |
          # Install required packages
          sudo apt-get update
          sudo apt-get install -y rpm alien build-essential python3-pip python3-sphinx python3-sphinx-rtd-theme

          # Create RPM macros file
          cat > ~/.rpmmacros << 'EOF'
          %_topdir $HOME/rpmbuild
          %__python3 /usr/bin/python3
          %python3_sitelib %(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
          %python3_sitearch %(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1))")
          %python3_version %(python3 -c "import sys; sys.stdout.write('{0}.{1}'.format(sys.version_info[0], sys.version_info[1]))")
          %python3_version_nodots %(python3 -c "import sys; sys.stdout.write('{0}{1}'.format(sys.version_info[0], sys.version_info[1]))")
          EOF

          # Install Python packages via pip with specific versions
          pip3 install --upgrade pip
          pip3 install sphinx==7.2.6 sphinx-rtd-theme==2.0.0

          # Create a requirements.txt for RPM build
          cat > ~/rpmbuild/SOURCES/requirements.txt << EOF
          sphinx==7.2.6
          sphinx-rtd-theme==2.0.0
          EOF

          # Set PYTHONPATH to include both system and local packages
          echo "PYTHONPATH=/usr/lib/python3/dist-packages:$(python3 -c 'import site; print(site.getsitepackages()[0])')" >> $GITHUB_ENV 