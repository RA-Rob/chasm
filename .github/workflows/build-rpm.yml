name: Build RPM Package

on:
  push:
    tags:
      - 'v*'  # Regular releases
      - 'v*-rc*'  # Release candidates
  workflow_dispatch:

# Add permissions block
permissions:
  contents: write  # Required for creating releases
  packages: write  # Required for uploading artifacts

jobs:
  setup-env:
    uses: ./.github/workflows/shared-build-env.yml

  determine-version:
    runs-on: ubuntu-latest
    outputs:
      version_type: ${{ steps.version.outputs.type }}
      is_prerelease: ${{ steps.version.outputs.is_prerelease }}
    steps:
      - name: Determine version type
        id: version
        run: |
          if [[ "${{ github.ref }}" =~ -rc[0-9]+$ ]]; then
            echo "type=rc" >> $GITHUB_OUTPUT
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "type=release" >> $GITHUB_OUTPUT
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

  build-rpm:
    needs: [setup-env, determine-version]
    strategy:
      matrix:
        distro: [rhel9, rocky9]
    uses: ./.github/workflows/shared-rpm-build.yml
    with:
      version_type: ${{ needs.determine-version.outputs.version_type }}
      distro: ${{ matrix.distro }}

  test-rpm:
    needs: build-rpm
    strategy:
      matrix:
        distro: [rhel9, rocky9]
    uses: ./.github/workflows/shared-rpm-test.yml
    with:
      distro: ${{ matrix.distro }}

  create-release:
    needs: [test-rpm, determine-version]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all tested RPMs
        uses: actions/download-artifact@v4
        with:
          pattern: rpm-*
          path: release-rpms
          merge-multiple: true

      - name: Generate release notes
        id: release_notes
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.ref }}^ 2>/dev/null || echo "")
          
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag, get all commits
            git log --pretty=format:"* %s (%h)" ${{ github.ref }} >> $GITHUB_OUTPUT
          else
            # Get commits between tags
            git log --pretty=format:"* %s (%h)" $PREV_TAG..${{ github.ref }} >> $GITHUB_OUTPUT
          fi
          
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-rpms/*.rpm
          body: ${{ steps.release_notes.outputs.notes }}
          generate_release_notes: false
          prerelease: ${{ needs.determine-version.outputs.is_prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 